{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:11:16.688Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-09T05:11:28.511Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:48:34.084Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:48:36.941Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:48:42.268Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:48:46.880Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:49:03.741Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-09T05:49:08.259Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-09T05:49:49.058Z"}
{"level":"error","message":"Error in userSignUp: Database query failed : bind message supplies 6 parameters, but prepared statement \"\" requires 7","stack":"Error: Database query failed : bind message supplies 6 parameters, but prepared statement \"\" requires 7\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\helper\\db.ts:24:11\n    at Generator.throw (<anonymous>)\n    at rejected (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\helper\\db.ts:6:65)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-09T05:49:49.506Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:50:52.968Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:50:58.348Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:51:02.200Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:51:25.254Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:51:50.109Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:51:55.252Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-09T05:51:59.468Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:52:26.501Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:54:40.497Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T05:59:02.451Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:00:31.549Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-09T06:02:17.289Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:05:30.601Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:05:33.950Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:05:37.470Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:07:19.734Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:11:31.019Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:12:47.153Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:13:33.037Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:13:46.722Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:13:52.119Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:13:56.780Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:14:59.629Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:15:04.204Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:15:16.656Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:15:26.086Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:15:28.917Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:15:51.020Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T06:16:03.511Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:16:48.505Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:16:58.125Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:17:07.571Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T06:17:11.972Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T06:17:38.892Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:18:39.261Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:18:48.787Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:19:03.424Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:19:10.904Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:19:22.501Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:19:30.756Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:19:38.467Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:20:35.224Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:20:41.634Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:20:52.418Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:20:56.685Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:21:00.263Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:21:31.764Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:21:36.039Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:22:24.131Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:22:58.828Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:23:07.327Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:23:14.529Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:23:25.153Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:23:56.299Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:24:03.499Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:24:09.332Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:25:45.976Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:26:25.898Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:26:33.226Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:27:57.391Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:28:03.240Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:28:16.861Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:28:33.612Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:28:49.533Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:29:13.887Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:29:18.667Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:29:32.030Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:29:40.852Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T06:29:48.876Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:33:29.431Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:35:09.970Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:35:21.693Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:36:52.464Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:37:00.441Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:37:04.817Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:37:27.402Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:37:31.307Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:37:39.562Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:37:44.178Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:37:52.736Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:38:07.671Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:39:21.946Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:39:36.432Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:40:10.590Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:40:51.137Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:41:09.404Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:41:45.658Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:46:31.127Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:47:52.909Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:47:56.216Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:48:05.935Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:49:19.654Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:49:29.169Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:54:33.890Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:65\\n                // }\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:65\\n                // }\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:54:37.679Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                const decodedToken = {\\n                    id: request.plugins.token.id\\n                };\\n                // const decodedToken ={\\n                //   id:65\\n                // }\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                const decodeToken = request.plugins.id;\\n                const decodedToken = {\\n                    id: request.plugins.token.id\\n                };\\n                // const decodedToken ={\\n                //   id:65\\n                // }\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:54:49.534Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                const decodedToken = {\\n                    id: request.plugins.token.id\\n                };\\n                // const decodedToken ={\\n                //   id:65\\n                // }\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, token_1.decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                const decodedToken = {\\n                    id: request.plugins.token.id\\n                };\\n                // const decodedToken ={\\n                //   id:65\\n                // }\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, token_1.decodeToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:54:55.197Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                const decodedToken = {\\n                    id: request.plugins.token.id\\n                };\\n                // const decodedToken ={\\n                //   id:65\\n                // }\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                const decodedToken = {\\n                    id: request.plugins.token.id\\n                };\\n                // const decodedToken ={\\n                //   id:65\\n                // }\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:55:37.457Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 65\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 65\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:55:56.660Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 2\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 2\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:56:01.641Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:56:05.907Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:56:36.577Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:56:52.031Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:57:37.169Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:58:51.434Z"}
{"level":"error","message":"Server not running ---  Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (POST /api/v1/vendorRoutes/BasicDetails) {\n  \"method\": \"POST\",\n  \"path\": \"/api/v1/vendorRoutes/BasicDetails\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            logger_1.default.info(\\\"Router-----store Address\\\");\\n            try {\\n                // const decodeToken = request.plugins.id;\\n                // const decodedToken ={\\n                //   id:request.plugins.token.id\\n                // }\\n                const decodedToken = {\\n                    id: 1\\n                };\\n                let entity;\\n                entity = yield this.resolver.VendorProfileV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in vendor profile\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"Store BasicDetails\",\n    \"tags\": [\n      \"api\",\n      \"Users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T06:59:27.650Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:01:19.373Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:01:24.161Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:04:39.481Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:05:27.160Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:05:41.752Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:07:21.269Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:09:01.532Z"}
{"level":"error","message":"Error in vendor profile Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at VendorRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:44:31)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:4:12)\n    at VendorRepository.VendorProfileV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:27:16)\n    at VendorResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:9:40)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T07:09:01.555Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:09:17.784Z"}
{"level":"error","message":"Error in vendor profile Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at VendorRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:44:31)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:4:12)\n    at VendorRepository.VendorProfileV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:27:16)\n    at VendorResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:9:40)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T07:09:17.787Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:09:45.333Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:09:50.246Z"}
{"level":"error","message":"Error in vendor profile Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at VendorRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:44:31)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:4:12)\n    at VendorRepository.VendorProfileV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:27:16)\n    at VendorResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:9:40)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T07:09:50.257Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:10:33.573Z"}
{"level":"error","message":"Error in vendor profile Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at VendorRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:44:31)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:4:12)\n    at VendorRepository.VendorProfileV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:27:16)\n    at VendorResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:9:40)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T07:10:33.576Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:11:51.835Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:11:57.885Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:12:21.296Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:12:50.889Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:13:00.512Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:13:05.627Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:13:10.359Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:13:49.832Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:14:17.961Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:14:27.376Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:14:30.695Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:15:01.612Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:15:31.443Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:15:34.755Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:16:04.184Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:16:10.177Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:16:38.620Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:17:00.593Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:17:18.745Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:17:23.981Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:17:34.569Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:17:59.350Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:18:07.393Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:18:22.895Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:18:56.284Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:19:21.171Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:19:34.246Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:19:59.031Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:20:33.625Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:20:58.899Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:21:25.871Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:22:39.823Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:24:37.247Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:25:09.192Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:25:57.303Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:26:16.947Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:26:22.381Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:28:41.247Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:30:05.719Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:30:07.583Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:30:35.732Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:30:51.223Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:31:05.137Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:31:05.377Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:31:38.835Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:37:33.552Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:38:14.649Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:38:26.162Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:38:44.461Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:38:49.022Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:38:58.170Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:39:32.013Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:40:03.811Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:40:18.129Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:40:39.725Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:40:46.681Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:41:07.405Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:41:10.458Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:41:25.270Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:41:29.221Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:50:34.420Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:51:09.854Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:51:52.420Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:52:00.693Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:52:02.696Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:54:53.124Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:55:06.825Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:55:16.836Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:55:21.182Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:58:40.354Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T07:58:48.075Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:58:52.762Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T07:59:47.374Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:00:37.710Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T08:00:56.943Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:02:52.335Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:03:08.120Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T08:03:12.332Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:08:50.992Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:08:56.340Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:09:07.426Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:09:11.719Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:09:16.867Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:09:21.682Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:09:29.093Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:09:34.796Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:10:35.980Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:10:56.025Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:11:06.901Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:11:10.381Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:11:22.233Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T08:11:37.133Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:12:51.215Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T08:13:32.504Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T08:14:54.356Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:19:10.919Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:20:59.819Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:22:15.980Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:22:42.389Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:22:56.928Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:25:16.481Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:25:25.310Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:25:39.064Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:25:43.011Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:25:46.341Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:25:51.901Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:26:11.421Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/vendorRoutes/VendorAuditList","timestamp":"2025-01-09T08:28:14.963Z"}
{"level":"error","message":"Error in Sending Data: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at VendorRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:771:31)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:4:12)\n    at VendorRepository.VendorAuditListV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:629:16)\n    at VendorResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:42:40)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T08:28:14.977Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:29:57.113Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:30:46.072Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:30:53.469Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:31:05.772Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/vendorRoutes/VendorAuditList","timestamp":"2025-01-09T08:31:13.801Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:31:36.265Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:31:42.467Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:31:49.181Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:31:52.233Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:31:55.694Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:31:59.422Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:32:03.761Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/vendorRoutes/VendorAuditList","timestamp":"2025-01-09T08:33:15.133Z"}
{"level":"error","message":"Error in Sending Data: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at VendorRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:772:31)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:4:12)\n    at VendorRepository.VendorAuditListV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:629:16)\n    at VendorResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:42:40)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T08:33:15.155Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:34:20.805Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:34:34.781Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T08:34:37.931Z"}
{"level":"info","message":"GET URL REQ => http://localhost:6200/api/v1/vendorRoutes/VendorAuditList","timestamp":"2025-01-09T08:34:42.508Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:27:48.074Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:32:13.826Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:32:17.018Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:32:27.565Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:33:12.061Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:33:19.469Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:37:23.201Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:37:29.355Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:44:02.268Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:44:12.889Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:44:34.642Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:44:48.939Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T09:46:45.509Z"}
{"level":"error","message":"Error in store vendor social links: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at VendorRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:448:31)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:4:12)\n    at VendorRepository.RestaurentDocUplaodV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\vendor-repository.ts:378:16)\n    at VendorResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:23:40)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-09T09:46:45.517Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:47:22.378Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:47:28.119Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:47:36.177Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T09:47:37.304Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T09:48:04.930Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:50:40.516Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T09:51:01.918Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:52:28.944Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:52:38.313Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:53:23.515Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:53:26.414Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:53:35.094Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:53:39.006Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:54:00.308Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:54:13.121Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:54:21.100Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:54:49.480Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:55:00.364Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:55:57.801Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:56:04.002Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:56:15.160Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T09:56:25.434Z"}
{"level":"info","message":"Router-----store Vendor Documents","timestamp":"2025-01-09T10:00:12.221Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:01:20.738Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:01:25.761Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:01:32.571Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:01:35.369Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:01:38.074Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:01:40.859Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:01:56.390Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:02:01.928Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:02:09.492Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:02:22.595Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:02:34.348Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:02:56.345Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:03:05.010Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:03:36.234Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:03:42.898Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:04:00.065Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:04:13.182Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:04:36.844Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:04:42.740Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:04:55.909Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:08:41.200Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:09:12.380Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:10:27.793Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:11:04.296Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:11:29.631Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:11:38.817Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:12:00.563Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:12:12.123Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:12:33.294Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:12:37.823Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:12:55.756Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:13:20.878Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:13:34.484Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:14:17.437Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:15:12.330Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:15:21.085Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:15:32.770Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:15:36.244Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:15:53.658Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:15:59.075Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:17:22.088Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:17:36.059Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:17:57.006Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:18:22.195Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:18:25.495Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:18:43.735Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:18:56.197Z"}
{"level":"info","message":"Router-----store Vendor Documents","timestamp":"2025-01-09T10:20:55.769Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:22:01.178Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:22:09.543Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:22:23.992Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:22:31.495Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:22:42.117Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:23:02.613Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:23:08.824Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:23:35.892Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:23:39.420Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:24:12.841Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:24:24.266Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:24:28.559Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:24:35.017Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:48:36.484Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:49:28.121Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:51:18.144Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:51:18.974Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:53:09.393Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:55:17.555Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:55:33.328Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:55:35.759Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T10:56:27.533Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:57:54.004Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:58:11.156Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:59:18.703Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T10:59:58.610Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:00:20.747Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:01:47.763Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:03:06.522Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:03:22.499Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:05:30.329Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:05:32.017Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:05:50.096Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:06:00.406Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:06:17.938Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:06:25.283Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:07:03.481Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:07:45.596Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:08:29.089Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:09:04.030Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:11:37.121Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:11:49.856Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:12:09.707Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:12:32.497Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:12:35.967Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:12:42.595Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:12:50.314Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:13:11.207Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:13:15.421Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:13:31.106Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:13:43.496Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:13:48.611Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:13:59.020Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:14:03.300Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:14:09.731Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:14:32.371Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:14:39.951Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:14:55.191Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:15:17.997Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:15:24.975Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:15:30.413Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:17:40.279Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:17:50.369Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:17:56.157Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:18:07.412Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:18:25.384Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:19:20.854Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:19:28.015Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:20:01.530Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:20:10.540Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:20:16.793Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:20:25.123Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:21:03.738Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:21:07.967Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:21:11.495Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:21:15.492Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:21:38.074Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:24:04.025Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:24:09.200Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:26:44.959Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:27:54.518Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:28:43.714Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:30:12.780Z"}
{"level":"info","message":"Router-----store Address","timestamp":"2025-01-09T11:34:01.419Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:36:18.226Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:36:24.184Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:36:36.026Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:36:45.704Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:37:14.338Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:37:26.120Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:37:33.267Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:37:41.214Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:37:49.508Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:38:00.297Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:38:06.738Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:38:16.628Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:38:23.634Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:38:35.323Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:38:40.639Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:38:48.190Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:39:09.439Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:39:16.457Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:39:27.043Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T11:39:33.781Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-09T12:46:23.538Z"}
