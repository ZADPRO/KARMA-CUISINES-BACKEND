{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T04:39:47.089Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-21T04:40:02.990Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-21T04:40:58.558Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-21T04:43:16.148Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-21T04:43:44.847Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-21T04:44:08.904Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-21T04:44:25.496Z"}
{"level":"error","message":"Error in store vendor social links: Cannot read properties of undefined (reading 'success')","stack":"TypeError: Cannot read properties of undefined (reading 'success')\n    at VendorProfile.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\controller.ts:344:18)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\controller.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-21T04:45:52.659Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T04:46:40.331Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T04:48:45.961Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T04:48:59.950Z"}
{"level":"error","message":"Error in adding products Cannot read properties of undefined (reading 'success')","stack":"TypeError: Cannot read properties of undefined (reading 'success')\n    at VendorProfile.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\controller.ts:344:18)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\controller.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-21T04:49:07.312Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T04:54:28.042Z"}
{"level":"error","message":"Error in adding products Cannot read properties of undefined (reading 'success')","stack":"TypeError: Cannot read properties of undefined (reading 'success')\n    at VendorProfile.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\controller.ts:344:18)\n    at Generator.next (<anonymous>)\n    at fulfilled (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\controller.ts:5:58)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2025-01-21T04:54:41.231Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T04:57:33.586Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T04:59:29.882Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:00:35.930Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:00:46.090Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:03:52.624Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:10:08.746Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:12:19.802Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:39:09.483Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:41:14.464Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:41:50.708Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:45:20.539Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T05:47:03.909Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T06:13:41.447Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T06:21:22.174Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T06:25:02.165Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T06:25:07.733Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T06:25:11.241Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T06:35:01.190Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T06:35:56.134Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T06:36:07.144Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:07:26.922Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:07:30.056Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/addProduct conflicts with existing /api/v1/vendorRoutes/addProduct","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/addProduct conflicts with existing /api/v1/vendorRoutes/addProduct\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T07:07:33.690Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:08:19.868Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:08:27.251Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:09:27.802Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:09:33.181Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:09:52.523Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:09:56.480Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:35:04.350Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:41:13.376Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:41:34.870Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:43:48.205Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:43:55.384Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:44:13.409Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:45:19.784Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:45:24.649Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:46:05.773Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:46:09.876Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:46:35.564Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:46:56.063Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:47:14.611Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:47:21.598Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:47:26.924Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:48:31.257Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:48:37.225Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:48:41.994Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:49:14.980Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:49:19.282Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:49:26.589Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:49:30.437Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T07:49:34.844Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:01:29.852Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:01:33.879Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:02:10.560Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:04:00.850Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:05:03.824Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:05:45.442Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:05:49.952Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:07:18.988Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:07:43.254Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:09:33.118Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:11:25.057Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:12:34.798Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:12:44.673Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T08:14:40.124Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T09:22:07.071Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:23:06.762Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:24:24.848Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:24:28.444Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:24:33.075Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:24:38.477Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:24:46.235Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:25:10.334Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:25:16.942Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:26:38.285Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:26:41.785Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:27:57.479Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/VendorAuditList conflicts with existing /api/v1/vendorRoutes/VendorAuditList","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/VendorAuditList conflicts with existing /api/v1/vendorRoutes/VendorAuditList\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T10:30:16.005Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/VendorAuditList conflicts with existing /api/v1/vendorRoutes/VendorAuditList","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/VendorAuditList conflicts with existing /api/v1/vendorRoutes/VendorAuditList\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T10:35:56.871Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:36:00.389Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:36:13.666Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:36:23.053Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:36:27.129Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:37:03.195Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:37:09.677Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:37:22.815Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:37:32.506Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:37:45.594Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:48:29.810Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:48:37.035Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:49:30.429Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:49:35.195Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:49:43.956Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:56:58.812Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:58:29.328Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T10:58:35.207Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:00:47.548Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:00:53.113Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:29:11.788Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/addDocuments conflicts with existing /api/v1/vendorRoutes/addDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/addDocuments conflicts with existing /api/v1/vendorRoutes/addDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T11:32:27.296Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:32:34.043Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:32:37.852Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:33:04.230Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:33:11.271Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:33:23.399Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:33:36.713Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:33:41.166Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:37:55.127Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:38:03.196Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:38:23.329Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:38:32.511Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:40:40.050Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:41:39.835Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:42:37.371Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:51:41.140Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:51:58.911Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:52:18.484Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:52:58.196Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:53:24.859Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:53:30.990Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:53:35.026Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:53:47.629Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:53:52.870Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:53:57.137Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:54:02.399Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:54:21.869Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:55:03.175Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:55:09.569Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:57:13.303Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T11:59:24.571Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:00:44.028Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:01:43.319Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:01:48.107Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:01:53.780Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:02:01.823Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:02:49.292Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:08:32.923Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:09:15.182Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T12:09:19.973Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T12:09:44.048Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T12:09:50.175Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T12:09:59.757Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T12:10:13.141Z"}
{"level":"error","message":"Server not running ---  Invalid routeConfig options (post /api/v1/vendorRoutes/UpdateDocuments) {\n  \"cors\": {\n    \"origin\": [\n      \"*\"\n    ],\n    \"headers\": [\n      \"Accept\",\n      \"Authorization\",\n      \"Content-Type\",\n      \"If-None-Match\"\n    ],\n    \"exposedHeaders\": [\n      \"WWW-Authenticate\",\n      \"Server-Authorization\"\n    ],\n    \"credentials\": true,\n    \"maxAge\": 86400,\n    \"additionalHeaders\": [],\n    \"additionalExposedHeaders\": [],\n    \"preflightStatusCode\": 200\n  },\n  \"security\": {\n    \"hsts\": 15768000,\n    \"xframe\": \"deny\",\n    \"xss\": \"disabled\",\n    \"noOpen\": true,\n    \"noSniff\": true,\n    \"referrer\": false\n  },\n  \"payload\": {\n    \"maxBytes\": 5242880,\n    \"output\": \"data\",\n    \"parse\": true,\n    \"multipart\": false,\n    \"protoAction\": \"error\",\n    \"maxParts\": 1000,\n    \"uploads\": \"C:\\\\Users\\\\INDUMA~1\\\\AppData\\\\Local\\\\Temp\",\n    \"failAction\": \"error\",\n    \"timeout\": 10000,\n    \"defaultContentType\": \"application/json\",\n    \"compression\": {}\n  },\n  \"cache\": {\n    \"statuses\": [\n      200,\n      204\n    ],\n    \"otherwise\": \"no-cache\"\n  },\n  \"compression\": {},\n  \"ext\": {},\n  \"files\": {\n    \"relativeTo\": \".\"\n  },\n  \"json\": {\n    \"replacer\": null,\n    \"space\": null,\n    \"suffix\": null,\n    \"escape\": false\n  },\n  \"log\": {\n    \"collect\": false\n  },\n  \"response\": {\n    \"disconnectStatusCode\": 499,\n    \"emptyStatusCode\": 204,\n    \"failAction\": \"error\",\n    \"ranges\": true\n  },\n  \"state\": {\n    \"parse\": true,\n    \"failAction\": \"error\"\n  },\n  \"timeout\": {\n    \"server\": false\n  },\n  \"validate\": {\n    \"failAction\": \"error\",\n    \"options\": {}\n  },\n  \"pre\": [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ],\n  \"auth\": false,\n  \"description\" \u001b[31m[1]\u001b[0m: \"\"\n}\n\u001b[31m\n[1] \"description\" is not allowed to be empty\u001b[0m","stack":"Error: Invalid routeConfig options (post /api/v1/vendorRoutes/UpdateDocuments) {\n  \"cors\": {\n    \"origin\": [\n      \"*\"\n    ],\n    \"headers\": [\n      \"Accept\",\n      \"Authorization\",\n      \"Content-Type\",\n      \"If-None-Match\"\n    ],\n    \"exposedHeaders\": [\n      \"WWW-Authenticate\",\n      \"Server-Authorization\"\n    ],\n    \"credentials\": true,\n    \"maxAge\": 86400,\n    \"additionalHeaders\": [],\n    \"additionalExposedHeaders\": [],\n    \"preflightStatusCode\": 200\n  },\n  \"security\": {\n    \"hsts\": 15768000,\n    \"xframe\": \"deny\",\n    \"xss\": \"disabled\",\n    \"noOpen\": true,\n    \"noSniff\": true,\n    \"referrer\": false\n  },\n  \"payload\": {\n    \"maxBytes\": 5242880,\n    \"output\": \"data\",\n    \"parse\": true,\n    \"multipart\": false,\n    \"protoAction\": \"error\",\n    \"maxParts\": 1000,\n    \"uploads\": \"C:\\\\Users\\\\INDUMA~1\\\\AppData\\\\Local\\\\Temp\",\n    \"failAction\": \"error\",\n    \"timeout\": 10000,\n    \"defaultContentType\": \"application/json\",\n    \"compression\": {}\n  },\n  \"cache\": {\n    \"statuses\": [\n      200,\n      204\n    ],\n    \"otherwise\": \"no-cache\"\n  },\n  \"compression\": {},\n  \"ext\": {},\n  \"files\": {\n    \"relativeTo\": \".\"\n  },\n  \"json\": {\n    \"replacer\": null,\n    \"space\": null,\n    \"suffix\": null,\n    \"escape\": false\n  },\n  \"log\": {\n    \"collect\": false\n  },\n  \"response\": {\n    \"disconnectStatusCode\": 499,\n    \"emptyStatusCode\": 204,\n    \"failAction\": \"error\",\n    \"ranges\": true\n  },\n  \"state\": {\n    \"parse\": true,\n    \"failAction\": \"error\"\n  },\n  \"timeout\": {\n    \"server\": false\n  },\n  \"validate\": {\n    \"failAction\": \"error\",\n    \"options\": {}\n  },\n  \"pre\": [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ],\n  \"auth\": false,\n  \"description\" \u001b[31m[1]\u001b[0m: \"\"\n}\n\u001b[31m\n[1] \"description\" is not allowed to be empty\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:83:32)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T12:10:19.891Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T12:10:23.545Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/UpdateDocuments conflicts with existing /api/v1/vendorRoutes/UpdateDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-21T12:10:32.832Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:10:36.160Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:11:01.322Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:11:09.472Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:11:25.356Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:11:37.250Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:11:41.345Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:11:50.600Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:16:44.152Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:17:11.085Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:19:27.802Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:42:26.954Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:45:46.523Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:45:51.395Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:46:00.507Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:46:13.247Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:46:19.123Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:46:50.242Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:47:04.181Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:47:14.723Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:47:28.883Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:47:35.130Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:47:57.638Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:48:02.403Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:48:07.219Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:51:42.058Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:52:50.046Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:53:11.577Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-21T12:53:17.026Z"}
