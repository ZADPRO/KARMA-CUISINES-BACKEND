{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T04:50:21.669Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T04:50:34.927Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T04:51:22.392Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T04:51:26.857Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T04:51:26.957Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T05:42:25.402Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T05:42:35.615Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T05:42:40.083Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T05:55:24.024Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/users/orderplacement conflicts with existing /api/v1/users/orderplacement","name":"AssertError","stack":"AssertError: New route /api/v1/users/orderplacement conflicts with existing /api/v1/users/orderplacement\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at UserRouters.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T06:01:53.864Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:02:01.991Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:02:07.236Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:02:12.775Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:02:53.870Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:03:00.423Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:03:08.784Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:04:39.621Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:04:57.654Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:05:30.901Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:06:23.688Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:06:49.753Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:07:50.072Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:08:05.607Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:08:13.930Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:08:57.682Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:10:57.623Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:17:07.855Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T06:19:18.584Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:20:31.631Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:20:38.188Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T06:20:41.322Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:21:24.273Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:21:56.859Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:22:30.228Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T06:22:32.528Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T06:23:17.117Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T06:23:29.025Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:24:30.020Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:24:54.295Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:25:35.986Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:25:46.333Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:26:48.369Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:26:55.563Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T06:38:21.771Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T06:42:59.342Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T07:05:11.292Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T07:05:55.552Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T07:06:01.305Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T07:07:54.373Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T07:08:29.862Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T07:09:06.350Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T07:09:40.828Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T07:40:41.177Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T08:26:54.583Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T08:32:17.144Z"}
{"level":"error","message":"Error in userSignUp: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at UserRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:605:37)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:4:12)\n    at UserRepository.vieworderplacementV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:490:16)\n    at UserResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\resolver.ts:25:38)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T08:32:17.163Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T08:34:17.411Z"}
{"level":"error","message":"Error in userSignUp: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at UserRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:605:37)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:4:12)\n    at UserRepository.vieworderplacementV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:490:16)\n    at UserResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\resolver.ts:25:38)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T08:34:17.417Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T08:34:32.894Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T08:34:34.622Z"}
{"level":"error","message":"Error in userSignUp: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at UserRepository.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:605:37)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:4:12)\n    at UserRepository.vieworderplacementV1 (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\user-repository.ts:490:16)\n    at UserResolver.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\resolver.ts:25:38)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\resolver.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T08:34:34.632Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T08:35:17.733Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T09:58:48.759Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T09:59:39.906Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T09:59:49.582Z"}
{"level":"error","message":"Error in userSignUp: Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at UserController.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:122:36)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:4:12)\n    at UserController.vieworderplacement (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:117:21)\n    at exports.Manager.execute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\toolkit.js:57:29)\n    at Object.internals.handler (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\handler.js:46:48)\n    at exports.execute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\handler.js:31:36)\n    at Request._lifecycle (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\request.js:370:68)","timestamp":"2025-01-23T09:59:49.596Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:00:35.188Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:00:42.106Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T10:00:43.899Z"}
{"level":"error","message":"Error in order details Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at UserController.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:122:36)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:4:12)\n    at UserController.vieworderplacement (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:117:21)\n    at exports.Manager.execute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\toolkit.js:57:29)\n    at Object.internals.handler (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\handler.js:46:48)\n    at exports.execute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\handler.js:31:36)\n    at Request._lifecycle (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\request.js:370:68)","timestamp":"2025-01-23T10:00:43.906Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:01:46.583Z"}
{"level":"info","message":"Router ------------","timestamp":"2025-01-23T10:01:47.661Z"}
{"level":"error","message":"Error in order details Cannot read properties of undefined (reading 'id')","stack":"TypeError: Cannot read properties of undefined (reading 'id')\n    at UserController.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:123:36)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:8:71\n    at new Promise (<anonymous>)\n    at __awaiter (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:4:12)\n    at UserController.vieworderplacement (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\controller.ts:118:21)\n    at exports.Manager.execute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\toolkit.js:57:29)\n    at Object.internals.handler (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\handler.js:46:48)\n    at exports.execute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\handler.js:31:36)\n    at Request._lifecycle (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\request.js:370:68)","timestamp":"2025-01-23T10:01:47.669Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:02:17.047Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:02:53.613Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:03:17.852Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:04:29.444Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:04:40.751Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:04:51.253Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:05:15.789Z"}
{"level":"error","message":"Server not running ---  Invalid route options (GET /api/v1/users/vieworderplacement) {\n  \"method\": \"GET\",\n  \"path\": \"/api/v1/users/vieworderplacement\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            const decodedToken = {\\n                id: request.plugins.token.id\\n            };\\n            console.log('decodedToken', decodedToken);\\n            // logger.info(\\\"Router-----store Address\\\");\\n            try {\\n                let entity;\\n                entity = yield this.resolver.vieworderplacementV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in getting order\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"User order placement\",\n    \"tags\": [\n      \"api\",\n      \"users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (GET /api/v1/users/vieworderplacement) {\n  \"method\": \"GET\",\n  \"path\": \"/api/v1/users/vieworderplacement\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            const decodedToken = {\\n                id: request.plugins.token.id\\n            };\\n            console.log('decodedToken', decodedToken);\\n            // logger.info(\\\"Router-----store Address\\\");\\n            try {\\n                let entity;\\n                entity = yield this.resolver.vieworderplacementV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in getting order\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"User order placement\",\n    \"tags\": [\n      \"api\",\n      \"users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at UserRouters.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T10:05:39.981Z"}
{"level":"error","message":"Server not running ---  Invalid route options (GET /api/v1/users/vieworderplacement) {\n  \"method\": \"GET\",\n  \"path\": \"/api/v1/users/vieworderplacement\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            const decodedToken = {\\n                id: request.plugins.token.id\\n            };\\n            console.log('decodedToken', decodedToken);\\n            // logger.info(\\\"Router-----store Address\\\");\\n            try {\\n                let entity;\\n                entity = yield this.resolver.vieworderplacementV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in getting order\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"User order placement\",\n    \"tags\": [\n      \"api\",\n      \"users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (GET /api/v1/users/vieworderplacement) {\n  \"method\": \"GET\",\n  \"path\": \"/api/v1/users/vieworderplacement\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            const decodedToken = {\\n                id: request.plugins.token.id\\n            };\\n            console.log('decodedToken', decodedToken);\\n            // logger.info(\\\"Router-----store Address\\\");\\n            try {\\n                let entity;\\n                entity = yield this.resolver.vieworderplacementV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in getting order\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"User order placement\",\n    \"tags\": [\n      \"api\",\n      \"users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at UserRouters.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T10:06:02.970Z"}
{"level":"error","message":"Server not running ---  Invalid route options (GET /api/v1/users/vieworderplacement) {\n  \"method\": \"GET\",\n  \"path\": \"/api/v1/users/vieworderplacement\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            const decodedToken = {\\n                id: request.plugins.token.id\\n            };\\n            console.log('decodedToken', decodedToken);\\n            // logger.info(\\\"Router-----store Address\\\");\\n            try {\\n                let entity;\\n                entity = yield this.resolver.vieworderplacementV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in getting order\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"User order placement\",\n    \"tags\": [\n      \"api\",\n      \"users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m","stack":"Error: Invalid route options (GET /api/v1/users/vieworderplacement) {\n  \"method\": \"GET\",\n  \"path\": \"/api/v1/users/vieworderplacement\",\n  \"config\": {\n    \"handler\": (request, response) => __awaiter(this, void 0, void 0, function* () {\\n            const decodedToken = {\\n                id: request.plugins.token.id\\n            };\\n            console.log('decodedToken', decodedToken);\\n            // logger.info(\\\"Router-----store Address\\\");\\n            try {\\n                let entity;\\n                entity = yield this.resolver.vieworderplacementV1(request.payload, decodedToken);\\n                if (entity.success) {\\n                    return response.response(entity).code(201); // Created\\n                }\\n                return response.response(entity).code(200); // Bad Request if failed\\n            }\\n            catch (error) {\\n                logger_1.default.error(\\\"Error in getting order\\\", error);\\n                return response\\n                    .response({\\n                    success: false,\\n                    message: error instanceof Error\\n                        ? error.message\\n                        : \\\"An unknown error occurred\\\",\\n                })\\n                    .code(500);\\n            }\\n        }),\n    \"description\": \"User order placement\",\n    \"tags\": [\n      \"api\",\n      \"users\"\n    ],\n    \"auth\": false\n  },\n  \"pre\" \u001b[31m[1]\u001b[0m: [\n    {\n      \"method\": function validateToken(request, h) {\\n    const authHeader = request.headers.authorization;\\n    console.log('authHeader line ----- 66  \\\\n \\\\n', authHeader);\\n    if (!authHeader) {\\n        return h.response({ error: \\\"Token missing\\\" }).code(401).takeover();\\n    }\\n    const token = authHeader.split(\\\" \\\")[1];\\n    console.log('token', token);\\n    const decodedToken = decodeToken(token);\\n    console.log('decodedToken', decodedToken);\\n    if (\\\"error\\\" in decodeToken) {\\n        return h\\n            .response((0, encrypt_1.encrypt)({\\n            token: false,\\n            message: decodedToken.error,\\n        }, true))\\n            .code(200)\\n            .takeover();\\n    }\\n    request.plugins.token = decodedToken;\\n    console.log(\\\"request.plugins.token\\\", request.plugins.token);\\n    return h.continue;\\n},\n      \"assign\": \"token\"\n    }\n  ]\n}\n\u001b[31m\n[1] \"pre\" is not allowed\u001b[0m\n    at Object.exports.apply (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\config.js:20:15)\n    at new module.exports.internals.Route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\route.js:34:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:525:23)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:13:14\n    at new Promise (<anonymous>)\n    at UserRouters.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:11:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\user\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T10:06:27.474Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:07:12.540Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:07:16.069Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:07:30.977Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:17:40.430Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:17:55.538Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:20:27.264Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:21:26.884Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:21:32.507Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:22:57.795Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:24:15.704Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:26:02.159Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:27:43.697Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:28:12.456Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:28:23.732Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:28:28.331Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:35:02.196Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:35:18.939Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:35:48.522Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:36:17.219Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:38:26.518Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:38:34.402Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/getDocuments conflicts with existing /api/v1/vendorRoutes/getDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/getDocuments conflicts with existing /api/v1/vendorRoutes/getDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T10:38:52.207Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/getDocuments conflicts with existing /api/v1/vendorRoutes/getDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/getDocuments conflicts with existing /api/v1/vendorRoutes/getDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T10:39:00.355Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/getDocuments conflicts with existing /api/v1/vendorRoutes/getDocuments","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/getDocuments conflicts with existing /api/v1/vendorRoutes/getDocuments\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T10:39:05.853Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:39:22.938Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:40:26.811Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:40:30.437Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:40:37.645Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:40:43.038Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:41:10.098Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:41:35.136Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:41:49.885Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:47:35.884Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:47:40.336Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:47:44.182Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:49:26.522Z"}
{"level":"error","message":"Server not running ---  New route /api/v1/vendorRoutes/visibility conflicts with existing /api/v1/vendorRoutes/visibility","name":"AssertError","stack":"AssertError: New route /api/v1/vendorRoutes/visibility conflicts with existing /api/v1/vendorRoutes/visibility\n    at module.exports.internals.Segment.internals.Segment.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\segment.js:47:14)\n    at exports.Router.internals.Router.internals.Router.add (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\call\\lib\\index.js:65:16)\n    at internals.Server._addRoute (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:529:46)\n    at internals.Server.route (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\node_modules\\@hapi\\hapi\\lib\\server.js:518:22)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:14:14\n    at new Promise (<anonymous>)\n    at vendorRoutes.<anonymous> (C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:12:12)\n    at Generator.next (<anonymous>)\n    at C:\\Users\\INDUMATHI\\Desktop\\KarmaCuisineBackend\\KARMA-CUISINE-BACKEND\\src\\api\\vendor\\routes.ts:8:71\n    at new Promise (<anonymous>)","timestamp":"2025-01-23T10:49:30.723Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:49:42.487Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:49:52.235Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:50:24.901Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:50:31.910Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:50:48.559Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:50:52.219Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:51:18.145Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:51:27.300Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:52:05.452Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:54:35.822Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:56:28.572Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:56:45.415Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:57:19.233Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T10:58:14.164Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:00:02.105Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:00:15.838Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:01:34.863Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:01:39.336Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:01:44.072Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:01:47.638Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:02:22.642Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:03:25.068Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:03:28.600Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:03:46.338Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:03:53.253Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:03:57.343Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:04:03.256Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:04:28.030Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:04:35.929Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:04:47.575Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:05:00.268Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:05:06.991Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:05:36.382Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:06:43.024Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:06:50.947Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:06:57.913Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:07:03.772Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:07:08.671Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:07:13.496Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:07:22.548Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:07:25.740Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:07:39.894Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:07:57.889Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:36:38.262Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:37:03.457Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:37:15.192Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:37:46.705Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:38:52.379Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:39:09.533Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:39:39.169Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T11:40:18.515Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T12:48:23.823Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T12:48:28.134Z"}
{"level":"info","message":"Server running --- from server.ts","timestamp":"2025-01-23T13:04:31.681Z"}
